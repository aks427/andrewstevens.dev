{"componentChunkName":"component---src-templates-post-js","path":"/posts/stream-files-to-zip-file-in-azure-blob-storage/","result":{"data":{"markdownRemark":{"html":"<p>Here’s a neat way to write multiple files to a zip file in Azure Blob Storage using C#. Only a single file will be in memory at once, so you can create very large zip files without any memory issues.</p>\n<p>This only works with <code class=\"language-text\">ZipArchiveMode</code> set to Create, so you won’t be able to add files to an existing zip file.</p>\n<p>This example is using the <code class=\"language-text\">WindowsAzure.Storage</code> nuget.</p>\n<div class=\"gatsby-highlight\" data-language=\"csharp\"><pre class=\"language-csharp\"><code class=\"language-csharp\"><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> account <span class=\"token operator\">=</span> CloudStorageAccount<span class=\"token punctuation\">.</span><span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"connectionstring\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> blobClient <span class=\"token operator\">=</span> account<span class=\"token punctuation\">.</span><span class=\"token function\">CreateCloudBlobClient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> container <span class=\"token operator\">=</span> blobClient<span class=\"token punctuation\">.</span><span class=\"token function\">GetContainerReference</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"containername\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\"><span class=\"token keyword\">var</span></span> blob <span class=\"token operator\">=</span> container<span class=\"token punctuation\">.</span><span class=\"token function\">GetBlockBlobReference</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"zipname.zip\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> stream <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> blob<span class=\"token punctuation\">.</span><span class=\"token function\">OpenWriteAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> zip <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\">ZipArchive</span><span class=\"token punctuation\">(</span>stream<span class=\"token punctuation\">,</span> ZipArchiveMode<span class=\"token punctuation\">.</span>Create<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> files <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token constructor-invocation class-name\"><span class=\"token keyword\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></span> <span class=\"token punctuation\">{</span> <span class=\"token string\">\"file1.pdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"file2.pdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"file3.pdf\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"file4.pdf\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> fileName <span class=\"token keyword\">in</span> files<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> fileStream <span class=\"token operator\">=</span> File<span class=\"token punctuation\">.</span><span class=\"token function\">OpenRead</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\"><span class=\"token keyword\">var</span></span> entry <span class=\"token operator\">=</span> zip<span class=\"token punctuation\">.</span><span class=\"token function\">CreateEntry</span><span class=\"token punctuation\">(</span>fileName<span class=\"token punctuation\">,</span> CompressionLevel<span class=\"token punctuation\">.</span>Optimal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">using</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token keyword\">var</span></span> innerFile <span class=\"token operator\">=</span> entry<span class=\"token punctuation\">.</span><span class=\"token function\">Open</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">await</span> fileStream<span class=\"token punctuation\">.</span><span class=\"token function\">CopyToAsync</span><span class=\"token punctuation\">(</span>innerFile<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","timeToRead":1,"frontmatter":{"title":"Stream Files to Zip File in Azure Blob Storage using C#","date":"24 March, 2020"}}},"pageContext":{"slug":"/posts/stream-files-to-zip-file-in-azure-blob-storage/"}},"staticQueryHashes":["3159585216"]}